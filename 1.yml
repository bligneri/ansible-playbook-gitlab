---
# 5. Database

- hosts: gitlab
  sudo: yes
  vars_files:
    - vars.yml
  tasks:
    - name: ensure package mysql-server is present
      apt: state=present pkg=mysql-server
    - name: ensure package mysql-client
      apt: state=present pkg=mysql-client
    - name: ensure package libmysqlclient-dev
      apt: state=present pkg=libmysqlclient-dev
    - name: ensure package python-mysqldb # Not mentioned in documentation, but is required
      apt: state=present pkg=python-mysqldb
    - name: ensure database gitlabhq_production is present
      mysql_db: state=present name=gitlabhq_production collation=utf8_unicode_ci encoding=utf8
    # I couldn’t get the following to work using a single task – might be an Ansible bug – it should work, right?
    - name: ensure database user gitlab is present
      mysql_user: state=present name=gitlab host=localhost password=$database_password
    - name: ensure database user gitlab has necessary privleges
      mysql_user: state=present name=gitlab priv=gitlabhq_production.*:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,INDEX,ALTER

# 6. GitLab

- hosts: gitlab
  sudo: yes
  sudo_user: gitlab
  tasks:
    - name: ensure GitLab 4.2 is cloned
      git: repo=https://github.com/gitlabhq/gitlabhq.git dest=/home/gitlab/gitlab version=4-2-stable
    - name: ensure GitLab config file exists
      command: cp /home/gitlab/gitlab/config/gitlab.yml.example /home/gitlab/gitlab/config/gitlab.yml creates=/home/gitlab/gitlab/config/gitlab.yml

- hosts: gitlab
  sudo: yes
  tasks:
    - name: ensure GitLab can write to log (1)
      file: state=directory path=/home/gitlab/gitlab/log owner=gitlab recurse=yes
    - name: ensure GitLab can write to tmp (1)
      file: state=directory path=/home/gitlab/gitlab/tmp owner=gitlab recurse=yes
    - name: ensure GitLab can write to log (2)
      command: chmod -R u+rwX /home/gitlab/gitlab/log
    - name: ensure GitLab can write to log (2)
      command: chmod -R u+rwX /home/gitlab/gitlab/tmp

- hosts: gitlab
  sudo: yes
  sudo_user: gitlab
  tasks:
    - name: ensure directory for satelittes exists
      file: state=directory path=/home/gitlab/gitlab-satelittes
    - name: ensure copy of unicorn config exists 
      command: cp /home/gitlab/gitlab/config/unicorn.rb.example /home/gitlab/gitlab/config/unicorn.rb creates=/home/gitlab/gitlab/config/unicorn.rb
    - name: ensure copy of database config exists
      command: cp /home/gitlab/gitlab/config/database.yml.mysql /home/gitlab/gitlab/config/database.yml creates=/home/gitlab/gitlab/config/database.yml

- hosts: gitlab
  sudo: yes
  tasks:
    - name: ensure gem charlock_holmes is installed
      command: gem install charlock_holmes --version '0.6.9'

- hosts: gitlab
  sudo: yes
  sudo_user: gitlab
  tasks:
    - name: ensure GitLab bundle is installed
      command: bundle install --deployment --without development test postgres chdir=/home/gitlab/gitlab # TODO: creates…
    - name: set git username
      command: git config --global user.name "GitLab"
    - name: set git email
      command: git config --global user.email "gitlab@localhost" # Should use same user.email as in config/gitlab.yml – is it really needed?

- hosts: gitlab
  sudo: yes
  tasks:
    - name: ensure copy of post-receive hook exists
      command: cp /home/gitlab/gitlab/lib/hooks/post-receive /home/git/.gitolite/hooks/common/post-receive creates=/home/git/.gitolite/hooks/common/post-receive
    - name: ensure copy of post-receive is owned by git:git
      file: state=file path=/home/git/.gitolite/hooks/common/post-receive owner=git group=git
